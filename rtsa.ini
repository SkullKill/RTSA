[DEFAULT]
# type can be temp pr relay or input
type = none

# Sensor/Relay enabled?
enable = 1

# temp sensor default settings
# will alarm if temp is higher than this value. default is `5` fridge should be set to around 5, freezer to around -18
upper_alert_value = 5
# will alarm if temp is lower than this value. default is `-23` fridge should be set to around 0, freezer to around -23
lower_alert_value = -23
# sensor correction offset. default is `0`
sensor_offset = 0.0
# delay before quering the sensor (in sec). default is `0`
delay_before = 0.0
# delay after quering the sensor (in sec) default is `1`
delay_after = 1.0
# if False, will still query the temp sensors, but will not alert if the temp is out of range
sensor_alerting = True

# Relay default settings
# Relay Default State, if 0, LOW, OFF, DOWN
state = 0
# offset the alarm range by upper + high_offset, and lower + low_offset (low_offset generally would be a -ve value)
alarm_range_high_offset = 0.0
alarm_range_low_offset = 0.0
# delay after alarm state to turn on (in minutes)
delay_relay_on = 5.0
delay_relay_off = 5.0
# mode of operation of relay. if set to `toogle` (default) when on, will stay on. if set to `momentary` when in alarm state, will turn on for a short time, then turn off and stay off for momentary_relay_timer value
relay_mode = toogle
# how long to leave the relay off before turning it on again when in moementary mode (in minues). default is `5.0`
momentary_relay_timer = 5.0

[system]
# where the temperature values will be stored
temp_values_folder = /var/log/rtsa/temp/
# our custom snmp query files
snmp_folder = /usr/local/sbin/snmp/
snmp_config_file = /etc/snmp/snmpd.conf
# first temp sensor will then be baseID_temp+1
baseID_temp = 100
# delay when running the program for the 1st time at boot. default is `10` sec (can be set to 10.2 etc)
delay_startup = 10.0
# Delay after eache complete cycle (in sec)
delay_cycle = 50.0

# if accessible from public places, recomend changing this to something like localhost and port 8000, then setup appache as a proxy. it will be a more secure setup. https/ssl can then be configured along with authentication.

#httpd_address = localhost
httpd_address = 0.0.0.0
httpd_port = 80

# Just for reference
[pinout]
name = BCMgpio (pin)
dpi = 
gpclk = 4 (7), 5 (29), 6 (31)
jtag = 
1-wire = 4 (7)
pcm = 18 (12), 19 (35), 20 (38), 21 (40)
sdio = 
i2c = 2 (3), 3 (5)
spi = 9( 21), 10 (19), 11 (23), 7 (26), 8 (24)
uart = 14 (8), 15 (10)

relay_1 = 22 (15)
relay_2 = 23 (16)
relay_3 = 24 (18)
relay_4 = 25 (22)
button_1 = 16 (36)

free_1 = 16 (36)
free_2 = 17 (11)
free_3 = 22 (15)
free_4 = 23 (16)
free_5 = 24 (18)
free_6 = 25 (22)
free_7 = 26 (37)
free_8 = 27 (13)

[mute_button]
name = mute_button
type = input
# pin to use for input (in BCM numbering)
gpio = 13
# default state when starting up. if `0` (default). will set pull down resistor, and wait for 3.3v to be applied to activate. if set to `1`, will set pull up resistor, and wait for connection to ground to activate. (recommend using state = 1 )
state = 1
# can be toogle or momentary . in toogle mode, it will to off untill the mute button is pressed again
mute_mode = momentary
# how long to mute for (in minutes)
timer = 15.0

# id MUST be a number
[101]
name = fridge_temp
#enable = 0
type = temp
file = /sys/bus/w1/devices/28-031661c304ff/w1_slave
upper_alert_value = 5
lower_alert_value = 0

[102]
name = freezer_temp
#enable = 0
type = temp
file = /sys/bus/w1/devices/28-0516807941ff/w1_slave
upper_alert_value = -18
lower_alert_value = -23

[201]
name = strobe_1
#enable = 0
type = relay
gpio = 11
state = 0

[202]
name = doorbell_1
#enable = 0
type = relay
gpio = 8
state = 0
delay_relay_on = 10
delay_relay_off = 10
relay_mode = momentary
momentary_relay_timer = 1.0

[205]
# if driving direct, a 160ohm will equal to ~10ma, for a 1.7v drop diode, use 320ohm if lots of led.
name = LED-MuteStatus
#enable = 0
type = output
gpio = 19
state = 1

